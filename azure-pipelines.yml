trigger:
  - main

resources:
  repositories:
    - repository: Terraform
      type: github
      name: IsuruGunarathne/Terraform
      endpoint: github.com_IsuruGunarathne

    # - repository: PIC-config
    #   type: github
    #   name: IsuruGunarathne/PIC-config
    #   endpoint: github.com_IsuruGunarathne

pool:
  vmImage: ubuntu-latest

steps:
  # Checkout the current repository (default behavior)
  - checkout: self

  # Checkout the deployment repository
  - checkout: Terraform

  # Print the configuration template from the deployment repository
  - script: |
      cat Terraform/Azure/config/confTemplate.tfvars
      mkdir Workspace
      cp Terraform/Azure/config/confTemplate.tfvars Workspace/confTemplate.tfvars
      echo ""
      echo "Configuration template copied to Workspace directory"
      cd Workspace
      ls
    displayName: "Fetching configuration template"

  - script: |
      cp PIC-config-mapper/generate-conf.sh Workspace/generate-conf.sh
      cp PIC-config-mapper/defaultValues.json Workspace/defaultValues.json
      cp PIC-config-mapper/keyMappings.json Workspace/keyMappings.json
      cd Workspace
      chmod +x generate-conf.sh
      ./generate-conf.sh $(env)
    displayName: "Run generator script"

  - script: |
      cd Workspace
      cat conf.auto.tfvars
    displayName: "Print the generated configuration"

  - script: |
      git config --global user.email $(gitHubEmail)
      git config --global user.name $(gitHubName)
    displayName: "Configure git"

  - script: |
      mkdir -p PIC-config/Azure
      cd PIC-config

      # Check if the repository is empty
      if git ls-remote https://$(gitHubName):$(GITHUB_TOKEN)@github.com/IsuruGunarathne/PIC-config.git | grep -q "refs/heads/main"; then
        echo "Repository is not empty. Pulling latest changes."
        git init
        git remote add origin https://$(gitHubName):$(GITHUB_TOKEN)@github.com/IsuruGunarathne/PIC-config.git
        git fetch origin
        git checkout main
        git pull origin main

        # Update the file
        cp ../Workspace/conf.auto.tfvars Azure/conf.auto.tfvars
        git add Azure/conf.auto.tfvars
        git commit -m "Update conf.auto.tfvars"
        git push origin main
      else
        echo "Repository is empty. Initializing and pushing initial commit."
        git init
        cp ../Workspace/conf.auto.tfvars Azure/conf.auto.tfvars
        git add .
        git commit -m "first commit"
        git branch -M main
        git remote add origin https://$(gitHubName):$(GITHUB_TOKEN)@github.com/IsuruGunarathne/PIC-config.git
        git push -u origin main
      fi
    displayName: "Push the generated configuration"
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
