trigger:
  - main

resources:
  repositories:
    - repository: Terraform
      type: github
      name: IsuruGunarathne/Terraform
      endpoint: github.com_IsuruGunarathne

    - repository: PIC-config
      type: github
      name: IsuruGunarathne/PIC-config
      endpoint: github.com_IsuruGunarathne

pool:
  vmImage: ubuntu-latest

steps:
  # Checkout the current repository (default behavior)
  - checkout: self

  # Checkout the deployment repository
  - checkout: Terraform

  # Checkout the configuration repository
  - checkout: PIC-config
    persistCredentials: "true"

  # Print the configuration template from the deployment repository
  - script: |
      cat Terraform/Azure/config/confTemplate.tfvars
      mkdir Workspace
      cp Terraform/Azure/config/confTemplate.tfvars Workspace/confTemplate.tfvars
      echo ""
      echo "Configuration template copied to Workspace directory"
      cd Workspace
      ls
    displayName: "Fetching configuration template"

  - script: |
      cp PIC-config-mapper/generate-conf.sh Workspace/generate-conf.sh
      cp PIC-config-mapper/defaultValues.json Workspace/defaultValues.json
      cp PIC-config-mapper/keyMappings.json Workspace/keyMappings.json
      cd Workspace
      chmod +x generate-conf.sh
      ./generate-conf.sh $(env)
    displayName: "Run generator script"

  - script: |
      cd Workspace
      cat conf.auto.tfvars
    displayName: "Print the generated configuration"

  - script: |
      git config --global user.email $(gitHubEmail)
      git config --global user.name $(gitHubName)
    displayName: "Configure git"

  - script: |
      mkdir PIC-config/Azure
      cp Workspace/conf.auto.tfvars PIC-config/Azure/conf.auto.tfvars
      cd PIC-config
      git add .
      git commit -m "Generated configuration for Azure"
      git push origin main
    displayName: "Push the generated configuration"
